name: PyPI releases

on:
  push:
    tags:
      - "pyzef-*"
      - "!pyzef-*a*"
      - "!pyzef-*dev*"
  workflow_dispatch:

jobs:
  check-license:
    uses: ./.github/workflows/check-license.yml
  build-wheels:
    needs: check-license
    name: Build wheels
    runs-on: ${{ matrix.os }}
    environment: Release
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        # os: [ubuntu-20.04, macos-latest]
        # os: [ubuntu-20.04]
        # Note: need "3.10" as yaml will truncate floating point number
        python-version: ["cp37", "cp38", "cp39", "cp310", "cp311"]
        # python-version: ["cp310"]
        exclude:
          - os: macos-latest
            python-version: "cp38"
          - os: macos-latest
            python-version: "cp37"
    env:
      # ZEFHUB_AUTH_KEY: "GUEST"
      ZEFHUB_AUTH_KEY: "${{ secrets.TEST_AUTH_KEY }}"

    steps:
      ########
      # Git things
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.4
        # Windows takes forever to build so this needs to be >20min
        timeout-minutes: 45
        with:
          package-dir: python
        env:
          CIBW_BUILD: "${{ matrix.python-version}}*"

      - name: save wheels in artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: |
            wheelhouse/*

      #######
      # Errors to slack
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          if_mention: failure
          channel: "#alerts-github-ci"
          fields: repo,message,commit,author,ref,workflow # selectable (default: repo,message)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() && !contains(github.ref, 'dev') }}

  upload-to-pypi:
    name: Upload wheels to PyPI
    runs-on: ubuntu-20.04
    environment: Release
    needs: [build-wheels]
    # We need this if in case build-wheels doesn't run, because for some reason
    # a skipped status is treated as a reason for the following jobs to also be
    # skipped. Note: github has special checks for any of the
    # "always"/"failed"/etc... expressions, so including always() indicates we
    # are handling it manually here.
    if: ${{ always() && needs.build-wheels.status != 'failure' }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Grab built wheels
        if: ${{ !contains(github.ref, 'dev') }}
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: wheelhouse

      - name: Generate sdist as well
        run: |
          pip3 install --upgrade pip setuptools
          cd python
          python setup.py sdist --dist-dir="../wheelhouse"

      - name: upload to pypi
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          ls -R wheelhouse
          pip3 install --upgrade twine
          python3 -m twine upload -u __token__ -p "${PYPI_TOKEN}" --skip-existing wheelhouse/*

  push_to_docker_hub:
    name: Push Docker image to Docker Hub
    environment: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: zefhub/zef

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          file: dockerfiles/Dockerfile.base
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  push_to_github_packages:
    name: Push Docker image to Github Packages
    environment: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          file: dockerfiles/Dockerfile.base
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
